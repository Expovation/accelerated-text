stages:
  - lint
  - test

variables:
  GIT_DEPTH: 3

cache:
  key: one-key-to-rule-them-all
  paths:
    - ./api/.m2/repository
    - ./api/.gitlibs

test_front_end:
  stage: test
  image: node:11-slim
  retry: 2
  cache:
    key: front-end-cache
    paths:
      - ./front-end/node_modules/
  before_script:
    - apt-get update -qq && apt-get install -y -qq build-essential chromium libatk-bridge2.0-0 libgtk-3-0 rsync
  script:
    - make test
  tags:
    - front-end

job_npm_audit:
  image: node:11-slim
  only:
    - schedules
  cache:
    key: front-end-cache
  script:
    - make npm-audit
  tags:
    - front-end

lint_api_and_core:
  stage: lint
  image: borkdude/clj-kondo
  cache: {}
  when: always
  script:
    - cd api
    - clj-kondo --lint src test
    - cd ..
    - clj-kondo --lint core/src

unit_test_core:
  stage: test
  image: clojure:tools-deps-alpine
  when: always
  script:
    - cd core
    - export GITLIBS="../api/.gitlibs/"
    - clojure -Sdeps '{:mvn/local-repo "../api/.m2/repository"}' -A:test -e integration

unit_test_api:
  stage: test
  image: clojure:tools-deps-alpine
  when: always
  script:
    - cd api
    - export GITLIBS=".gitlibs/"
    - clojure -Sdeps '{:mvn/local-repo "./.m2/repository"}' -A:test -e integration

integration_test_api:
  stage: test
  image: tiangolo/docker-with-compose
  when: always
  variables:
    DOCKER_HOST: "tcp://docker:2375"
  script:
    - cd api
    - docker-compose -p test -f docker-compose.test.yml down
    - docker-compose -p test -f docker-compose.test.yml build
    - docker-compose -p test -f docker-compose.test.yml up --remove-orphans --abort-on-container-exit --exit-code-from api
